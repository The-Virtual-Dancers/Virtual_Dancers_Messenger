{"version":3,"sources":["firebase.js","Todo.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","isMyTodo","todo","localStorage","getItem","split","includes","id","Modal","onClose","e","className","placeholder","value","onChange","event","target","Button","onClick","collection","doc","groupId","set","merge","List","ListItem","ListItemText","primary","secondary","name","variant","delete","mytodos","splice","indexOf","setItem","deleteTodo","role","aria-label","shortid","require","customConfig","dictionaries","adjectives","colors","separator","length","shortName","uniqueNamesGenerator","App","todos","setTodos","joinId","setjoinId","setId","groupName","setGroupName","setName","allGroups","setAllGroups","setMyGroups","isMyGroup","myGroups","JSON","parse","find","group","useEffect","groups","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","disabled","type","preventDefault","get","then","local","push","stringify","color","generate","timestamp","FieldValue","serverTimestamp","index","filter","alert","launchExistingGroup","removeGroup","deleteGroup","add","newTodo","oldTodos","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9b800f18.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAk55_K2PkHtm9dc57ZPDqJPXtBmKTR6Wc\",\n    authDomain: \"todo-app-d0a0d.firebaseapp.com\",\n    databaseURL: \"https://todo-app-d0a0d.firebaseio.com\",\n    projectId: \"todo-app-d0a0d\",\n    storageBucket: \"todo-app-d0a0d.appspot.com\",\n    messagingSenderId: \"899210179996\",\n    appId: \"1:899210179996:web:ff94c6b7fad981b6368459\",\n    measurementId: \"G-GWNCV6K2HY\"\n});\n\nconst db = firebaseApp.firestore();\nexport default db;","import { ListItemText } from '@material-ui/core'\nimport React ,{useState}from 'react'\nimport './Todo.css'\nimport {ListItem, List, Modal, Button} from '@material-ui/core'\nimport db from './firebase'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme)=> ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2,4,3)\n    }\n}))\n\nfunction Todo(props) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState();\n\n    const updateTodo = () => {\n        db.collection(`groups`).doc(props.groupId).collection('messages').doc(props.todo.id).set({\n            todo: input\n        }, {merge:true});\n        setOpen(false);\n    }\n\n    // check User (Browser)\n   function isMyTodo(todo){\n       if(localStorage.getItem('mytodos')){\n           let mytodos = localStorage.getItem('mytodos').split(',')\n           if(mytodos.includes(todo.id)) return true\n           else return false\n       } else {\n           return false\n       }\n   }\n\n\n   // Delete todo\n   function deleteTodo(id) {\n    db.collection(`groups`).doc(props.groupId).collection('messages').doc(id).delete()\n       let mytodos = localStorage.getItem('mytodos').split(',')\n       mytodos.splice(mytodos.indexOf(id), 1)\n       localStorage.setItem('mytodos', mytodos)\n   }\n\n    return (\n        <>\n        <Modal open = {open} onClose={e =>  setOpen(false)}>\n            <div className={classes.paper}>\n                <h1>Edit Your Message</h1>\n                <input placeholder={props.todo.todo} value={input} onChange={event => setInput(event.target.value)}></input>\n                <Button onClick={updateTodo}>Update Message</Button>\n            </div>\n        </Modal>\n        <List className=\"todo__list\">\n            <ListItem>\n                <ListItemText primary={props.todo.todo} secondary={props.todo.name + \" 👯‍♂️🕺💃\"} className=\"todo__list__item\"/>\n                { isMyTodo(db.collection('todos').doc(props.todo.id)) && <Button variant=\"contained\" onClick={e => setOpen(true)} className=\"todo__list__button\">Edit</Button> }\n                { isMyTodo(db.collection('todos').doc(props.todo.id)) && <Button variant=\"contained\" onClick={()=>deleteTodo(props.todo.id)}><span role=\"img\" aria-label=\"delete\">❌</span>                </Button>}\n            </ListItem>\n            \n        </List>\n        </>\n    )\n}\n\nexport default Todo\n","import React, {useState, useEffect} from 'react';\nimport {Button, FormControl, InputLabel, Input, ListItem, List} from '@material-ui/core'\nimport SweetAlert from 'sweetalert-react';\n\nimport { uniqueNamesGenerator, adjectives, colors } from 'unique-names-generator';\nimport './App.css';\nimport Todo from './Todo'\nimport db from './firebase'\nimport firebase from 'firebase';\nconst shortid = require('shortid');\n\nconst customConfig = {\n  dictionaries: [adjectives, colors],\n  separator: '-',\n  length: 2,\n};\n\nconst shortName = uniqueNamesGenerator(customConfig); // big-donkey\n\n\n\n\n\nfunction App() {\n  \n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n  const [joinId, setjoinId] = useState('');\n  const [id, setId] = useState();\n  const [groupName, setGroupName] = useState();\n  const [name, setName] = useState('');\n  const [allGroups, setAllGroups] = useState([]);\n  const [myGroups, setMyGroups] = useState([]);\n\n\n\n\n  function joinGroup(event){\n    event.preventDefault();\n      db.collection('groups').doc(joinId).get().then(group => {\n        if(group.data()){\n          let name = group.data().name\n          setGroupName(name)\n          setId(joinId)\n          if(localStorage.getItem('groups')){\n            let myGroups = localStorage.getItem('groups')\n            myGroups = JSON.parse(myGroups)\n            let group = {id:joinId, name: name}\n\n            let alreadyPresent = myGroups.find(local=> local.id === group.id)\n            if(!alreadyPresent){\n              myGroups.push(group)\n              setAllGroups(myGroups)\n              localStorage.setItem('groups', JSON.stringify(myGroups))\n            }\n          } else{\n            let myGroups = []\n            let group = {id:joinId, name:groupName}\n            let alreadyPresent = myGroups.find(local=> local.id === group.id)\n            if(!alreadyPresent){\n              myGroups.push(group)\n              setAllGroups(myGroups)\n              localStorage.setItem('groups', JSON.stringify(myGroups))\n            }\n          }\n        }\n      })\n\n      \n\n      setjoinId('')\n  };\n\n  const launchExistingGroup = (id) => {\n\n    db.collection('groups').doc(id).get().then(group => {\n      if(group.data()){\n        setId(id)\n        setGroupName(group.data().name)\n      }else{\n        let myGroups = localStorage.getItem('groups')\n        myGroups = JSON.parse(myGroups)\n        myGroups = myGroups.filter(local=> local.id !== id)\n        setAllGroups(myGroups)\n        localStorage.setItem('groups', JSON.stringify(myGroups))\n       \n        return <>\n           {alert(\"OOps! Group Deleted by creater\")}\n      </>\n\n      }\n    })\n    \n  }\n\n  const back = () => {\n    setId()\n  }\n\n  const isMyGroup = (id) => {\n    if(localStorage.getItem('myGroups')){\n      let myGroups = localStorage.getItem('myGroups')\n      myGroups = JSON.parse(myGroups)\n      myGroups = myGroups.find(group => group.id === id)\n      return myGroups?true:false\n    }else{\n      return false\n    }\n  }\n\n  const removeGroup = (id) => {\n    let myGroups = localStorage.getItem('groups')\n    myGroups = JSON.parse(myGroups)\n    myGroups = myGroups.filter(local=> local.id !== id)\n    setAllGroups(myGroups)\n    localStorage.setItem('groups', JSON.stringify(myGroups))\n  }\n\n  \n  const deleteGroup = (id) =>{\n    db.collection(`groups`).doc(id).delete()\n\n    let myGroups = localStorage.getItem('groups')\n    myGroups = JSON.parse(myGroups)\n    myGroups = myGroups.filter(local=> local.id !== id)\n    setAllGroups(myGroups)\n    localStorage.setItem('groups', JSON.stringify(myGroups))\n\n    if(localStorage.getItem('myGroups')){\n      let myGroups = localStorage.getItem('myGroups')\n      myGroups = JSON.parse(myGroups)\n      myGroups = myGroups.filter(local=> local.id !== id)\n      setMyGroups(myGroups)\n      localStorage.setItem('myGroups', JSON.stringify(myGroups))\n    }\n  }\n\n  const createGroup = (event) => {\n    event.preventDefault();\n    let id = shortid.generate()\n    setId(id)\n    db.collection('groups').doc(id).set({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      name: name\n    })\n\n    if(localStorage.getItem('groups')){\n      let myGroups = localStorage.getItem('groups')\n      myGroups = JSON.parse(myGroups)\n      let group = {id:id, name:name}\n      myGroups.push(group)\n      setAllGroups(myGroups)\n      localStorage.setItem('groups', JSON.stringify(myGroups))\n    } else{\n      let myGroups = []\n      let group = {id:id, name:name}\n      myGroups.push(group)\n      setAllGroups(myGroups)\n      localStorage.setItem('groups', JSON.stringify(myGroups))\n    }\n\n    if(localStorage.getItem('myGroups')){\n      let myGroups = localStorage.getItem('myGroups')\n      myGroups = JSON.parse(myGroups)\n      let group = {id:id, name:name}\n      myGroups.push(group)\n      setMyGroups(myGroups)\n      localStorage.setItem('myGroups', JSON.stringify(myGroups))\n    } else{\n      let myGroups = []\n      let group = {id:id, name:name}\n      myGroups.push(group)\n      setMyGroups(myGroups)\n      localStorage.setItem('myGroups', JSON.stringify(myGroups))\n    }\n\n    setGroupName(name)\n    setName('')\n  }\n\n  useEffect(() => {    \n    let groups = localStorage.getItem('groups')\n    if(groups){\n      groups = JSON.parse(groups)\n      setAllGroups(groups)\n    }\n  }, [])\n\n  useEffect(() => {    \n    if(id){\n      db.collection('groups').doc(id).collection('messages').orderBy('timestamp' ,'desc').onSnapshot(snapshot => {\n        setTodos(snapshot.docs.map(doc => ({id: doc.id, todo: doc.data().todo, name: doc.data().name})))\n      })\n    }\n  }, [id])\n\n  //This will fire off when we click the button\n  const addTodo = (event) => {\n    event.preventDefault();\n\n    if(!localStorage.getItem('uniqueName')){\n      localStorage.setItem('uniqueName', shortName)\n    }\n\n    db.collection(`groups`).doc(id).collection('messages').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      name: localStorage.getItem('uniqueName')\n    }).then((newTodo)=>{\n      // Add to localStorage \n      if(localStorage.getItem('mytodos')){\n        let oldTodos = localStorage.getItem('mytodos')\n        localStorage.setItem('mytodos',`${oldTodos},${newTodo.id}`)\n      }\n      else{\n        localStorage.setItem('mytodos',newTodo.id)\n      }\n    })\n    setInput('')\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Virtual Dancers <span role=\"img\" aria-label=\"dancers\"> 👯‍♂️🕺💃 </span>Secret Messenger</h1>\n\n      { !id && <div className=\"group\">\n            <div className = \"join\">\n                <form>\n                    <FormControl>\n                        <InputLabel><span role=\"img\" aria-label=\"tick\"> ✅ </span> Enter Group Id</InputLabel>\n                        <Input value={joinId} onChange={event => setjoinId(event.target.value)}/>\n                    </FormControl>\n                    <Button disabled={!joinId} type=\"submit\" onClick={joinGroup} variant=\"contained\" color=\"primary\" className=\"join_group_btn\">Join Group</Button>\n                </form>\n            </div>\n            <span className=\"or\">OR</span>\n            <div className=\"create\">\n                <form>\n                  <FormControl>\n                    <InputLabel><span role=\"img\" aria-label=\"tick\"> ✅ </span> Write Group Name</InputLabel>\n                    <Input value={name} onChange={event => setName(event.target.value)}/>\n                  </FormControl>\n\n                  <Button disabled={!name} type=\"submit\" onClick={createGroup} variant=\"contained\" color=\"primary\" className=\"add_message_btn\">Create Group</Button>\n                </form>\n            </div>\n        </div>\n      }\n\n      {\n        !id && \n        <div className=\"groupNames\">\n          \n        <div className = \"groupNames-text\">\n          Your Recent Groups :\n        </div>\n\n          <List className=\"todo__list\">\n          {allGroups.map((group, index) => {\n            isMyGroup(group.id)\n          return <div>\n             <ListItem>\n            <Button onClick={() => launchExistingGroup(group.id)} variant=\"contained\" color=\"primary\" className=\"open_grp_btn\">{group.name}</Button>\n            <Button variant=\"contained\" onClick={()=>removeGroup(group.id)} className=\"remove_group\">Remove</Button>\n            {isMyGroup(group.id) && <Button variant=\"contained\" onClick={()=>deleteGroup(group.id)} className=\"delete_group\"><span role=\"img\" aria-label=\"delete\">❌</span>  </Button>}\n            </ListItem>\n          </div>\n          })}\n           \n          </List>\n          \n          \n        </div>\n      }\n\n\n      {\n      id && \n      <div className=\"group-info\">\n        <div className = \"group-info-name\"> Name: {groupName} <br></br> </div>\n        <div className = \"group-info-id\"> Id: {id} <br></br> </div>\n      </div>\n      }\n\n      {\n        id &&\n        <div className=\"back\">\n                <Button type=\"submit\" onClick={back} variant=\"contained\" color=\"primary\" className=\"add_message_btn\">BACK</Button>\n        </div>\n      }\n\n      {id && <form>\n      <FormControl>\n        <InputLabel><span role=\"img\" aria-label=\"tick\"> ✅ </span> Write a Message</InputLabel>\n        <Input value={input} onChange={event => setInput(event.target.value)}/>\n      </FormControl>\n\n      <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\" className=\"add_message_btn\">Add Message</Button>\n      </form>}\n\n      \n\n      {id && <ul>\n        {todos.map((todo, index) => (\n          <Todo key={index} todo={todo} groupId={id}/>\n        ))}\n      </ul>}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}